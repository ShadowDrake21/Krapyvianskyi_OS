pipeline {
    agent any

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    def dockerImage = docker.build("image-lab-os:latest", "--file /home/dmytro/Downloads/docker/Dockerfile .")
                }
            }
        }

        stage('Run Docker container') {
            steps {
                script {
                    // Run Jenkins container
                    def jenkinsContainerId = sh(script: 'docker run -d -p 8087:8080 -p 50007:50000 image-lab-os', returnStdout: true).trim()

                    // Wait for Jenkins to be ready
                    sh "docker exec ${jenkinsContainerId} /bin/bash -c 'while [[ ! -f /var/jenkins_home/secrets/initialAdminPassword ]]; do sleep 1; done'"
                }
            }
        }

        stage('Clone repository and build packages') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS') {
                        // Clone repository
                        git url: 'https://github.com/ShadowDrake21/Krapyvianskyi_OS', branch: 'main'

                        // Build RPM packages
                        dir('Krapyvianskyi_OS/rpm') {
                            sh 'rpmbuild -ba numOfFiles.spec'
                        }
                    }
                }
            }
        }

        stage('Install RPM and execute script') {
            steps {
                script {
                    def jenkinsContainerId = sh(script: 'docker run -d -p 8087:8080 -p 50007:50000 image-lab-os', returnStdout: true).trim()
                    // Install RPM and execute script in Jenkins container
                    sh "docker exec ${jenkinsContainerId} /bin/bash -c 'yum install -y /root/rpmbuild/RPMS/x86_64/num-of-files-1.0-1.x86_64.rpm'"
                    sh "docker exec ${jenkinsContainerId} /bin/bash -c '/usr/bin/num-of-files.sh'"
                }
            }
        }
    }
}
